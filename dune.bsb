;;;;{BSB GENERATED: NO EDIT
(subdir ./node_modules/@glennsl/bs-jest/src
(rule
(targets  jest.ast)
 (deps (:inputs  jest.ml) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  jest.iast)
 (deps (:inputs  jest.mli) )
(action
 (run bsc  -w a -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  jest.cmi jest.cmti)
 (deps (:inputs  jest.iast)  (:ast_deps .././src/jest.ast .././src/jest.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders/node_modules/@glennsl/bs-jest -cwd ./src %{ast_deps}) (run bsc -I .    -w a -o jest.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  jest.cmj jest.cmt jest.bs.js)
 (mode (promote (until-clean) (only jest.bs.js)))(deps (:inputs  jest.ast)  jest.cmi (:ast_deps .././src/jest.ast .././src/jest.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders/node_modules/@glennsl/bs-jest -cwd ./src %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name @glennsl/bs-jest -bs-package-output commonjs:./src:.bs.js -o jest.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  jest.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))


(subdir ./node_modules/@glennsl/bs-jest(data_only_dirs .melange.eobjs))
(subdir ./node_modules/@glennsl/bs-jest/.melange.eobjs)

(subdir ./__tests__
(rule
(targets  decoders_bs_test.ast)
 (deps (:inputs  decoders_bs_test.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_bs_test.cmj decoders_bs_test.cmi decoders_bs_test.cmt decoders_bs_test.bs.js)
 (mode (promote (until-clean) (only decoders_bs_test.bs.js)))(deps (:inputs  decoders_bs_test.ast)  (:ast_deps .././__tests__/decoders_bs_test.ast ) ../bsconfig.json(alias ../node_modules/@glennsl/bs-jest/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -g -root /Users/mando/Github/ocaml-decoders -cwd ./__tests__ %{ast_deps}) (run bsc -I . -bs-re-out -I ../src -I ../src-bs   -I ../node_modules/@glennsl/bs-jest/src  -w a -bs-package-name bs-decoders -bs-package-output commonjs:./__tests__:.bs.js -o decoders_bs_test.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  decoders_bs_test.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))
(subdir ./src-bs
(rule
(targets  decoders_bs.ast)
 (deps (:inputs  decoders_bs.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_bs.iast)
 (deps (:inputs  decoders_bs.rei) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_bs.cmi decoders_bs.cmti)
 (deps (:inputs  decoders_bs.iast)  (:ast_deps .././src-bs/decoders_bs.ast .././src-bs/decoders_bs.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src-bs %{ast_deps}) (run bsc -bs-re-out -I ../src -I .    -w a -o decoders_bs.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_bs.cmj decoders_bs.cmt decoders_bs.bs.js)
 (mode (promote (until-clean) (only decoders_bs.bs.js)))(deps (:inputs  decoders_bs.ast)  decoders_bs.cmi (:ast_deps .././src-bs/decoders_bs.ast .././src-bs/decoders_bs.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src-bs %{ast_deps}) (run bsc -bs-read-cmi -bs-re-out -I ../src -I .    -w a -bs-package-name bs-decoders -bs-package-output commonjs:./src-bs:.bs.js -o decoders_bs.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_util.ast)
 (deps (:inputs  decoders_util.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_util.iast)
 (deps (:inputs  decoders_util.rei) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_util.cmi decoders_util.cmti)
 (deps (:inputs  decoders_util.iast)  (:ast_deps .././src-bs/decoders_util.ast .././src-bs/decoders_util.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src-bs %{ast_deps}) (run bsc -bs-re-out -I ../src -I .    -w a -o decoders_util.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders_util.cmj decoders_util.cmt decoders_util.bs.js)
 (mode (promote (until-clean) (only decoders_util.bs.js)))(deps (:inputs  decoders_util.ast)  decoders_util.cmi (:ast_deps .././src-bs/decoders_util.ast .././src-bs/decoders_util.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src-bs %{ast_deps}) (run bsc -bs-read-cmi -bs-re-out -I ../src -I .    -w a -bs-package-name bs-decoders -bs-package-output commonjs:./src-bs:.bs.js -o decoders_util.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  shims_let_ops_.ast)
 (deps (:inputs  shims_let_ops_.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  shims_let_ops_.cmj shims_let_ops_.cmi shims_let_ops_.cmt shims_let_ops_.bs.js)
 (mode (promote (until-clean) (only shims_let_ops_.bs.js)))(deps (:inputs  shims_let_ops_.ast)  (:ast_deps .././src-bs/shims_let_ops_.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src-bs %{ast_deps}) (run bsc -bs-re-out -I ../src -I .    -w a -bs-package-name bs-decoders -bs-package-output commonjs:./src-bs:.bs.js -o shims_let_ops_.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  shims_let_ops_.bs.js decoders_util.bs.js decoders_bs.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))
(subdir ./src
(rule
(targets  decode.ast)
 (deps (:inputs  decode.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decode.iast)
 (deps (:inputs  decode.rei) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decode.cmi decode.cmti)
 (deps (:inputs  decode.iast)  (:ast_deps .././src/decode.ast .././src/decode.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src %{ast_deps}) (run bsc -bs-re-out -I . -I ../src-bs    -w a -o decode.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decode.cmj decode.cmt decode.bs.js)
 (mode (promote (until-clean) (only decode.bs.js)))(deps (:inputs  decode.ast)  decode.cmi (:ast_deps .././src/decode.ast .././src/decode.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src %{ast_deps}) (run bsc -bs-read-cmi -bs-re-out -I . -I ../src-bs    -w a -bs-package-name bs-decoders -bs-package-output commonjs:./src:.bs.js -o decode.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  encode.ast)
 (deps (:inputs  encode.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  encode.iast)
 (deps (:inputs  encode.rei) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  encode.cmi encode.cmti)
 (deps (:inputs  encode.iast)  (:ast_deps .././src/encode.ast .././src/encode.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src %{ast_deps}) (run bsc -bs-re-out -I . -I ../src-bs    -w a -o encode.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  encode.cmj encode.cmt encode.bs.js)
 (mode (promote (until-clean) (only encode.bs.js)))(deps (:inputs  encode.ast)  encode.cmi (:ast_deps .././src/encode.ast .././src/encode.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src %{ast_deps}) (run bsc -bs-read-cmi -bs-re-out -I . -I ../src-bs    -w a -bs-package-name bs-decoders -bs-package-output commonjs:./src:.bs.js -o encode.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders.ast)
 (deps (:inputs  decoders.re) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  decoders.cmj decoders.cmi decoders.cmt decoders.bs.js)
 (mode (promote (until-clean) (only decoders.bs.js)))(deps (:inputs  decoders.ast)  (:ast_deps .././src/decoders.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-decoders -cwd ./src %{ast_deps}) (run bsc -bs-re-out -I . -I ../src-bs    -w a -bs-package-name bs-decoders -bs-package-output commonjs:./src:.bs.js -o decoders.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  decoders.bs.js encode.bs.js decode.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))


(subdir .melange.eobjs)

(data_only_dirs node_modules .melange.eobjs)
(alias (name bsb_world))
;;;;BSB GENERATED: NO EDIT}
